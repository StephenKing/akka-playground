akka {
  loglevel = "DEBUG"
  loggers = ["akka.testkit.TestEventListener"]

  log-config-on-start = true

  actor {
    provider = cluster

    deployment {
      /number-producer/consumer-router {
        router = round-robin-pool
        routees.paths = ["/user/number-consumer"]
        cluster {
          enabled = on
          allow-local-routees = on
          use-role = consumer
        }
      }
    }
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
//      hostname = "127.0.0.1"
      hostname = ${?NOMAD_IP_akka}
//      port = 0
      port = ${?NOMAD_PORT_akka}
      # There is also NOMAD_HOST_PORT_akka and netty.tcp.bind-port. Figure out, if we need this
    }
  }

  extensions = ["de.heikoseeberger.constructr.ConstructrExtension"]

  // The following settings are for super fast automatic removal of unreachable nodes and not suitable for production!
  cluster {
    auto-down-unreachable-after       = 0s
    down-removal-margin               = 100ms
    unreachable-nodes-reaper-interval = 250ms

    failure-detector {
      acceptable-heartbeat-pause = 1s
      hearbeat-interval          = 250ms
      threshold                  = 4.0
    }
    # must be overriden using parameter
//    seed-nodes = [
//      "akka.tcp://number-actors@"${akka.remote.netty.tcp.hostname}":"${akka.remote.netty.tcp.port}
//    ]

    # must be overriden using parameter
    # roles = ["seed"]

    roles = [${AKKA_CLUSTER_ROLE}]

//    role {
//      seed.min-nr-of-members = 1
//    }

  }
}

constructr {
  coordination {
    class-name = com.tecsisa.constructr.coordination.consul.ConsulCoordination
//    host = consul.service.consul
    host = localhost
    port = 8500
  }
  consul {
    agent-name = ${?NOMAD_ALLOC_NAME}
  }

  coordination-timeout = 3 seconds  // Maximum response time for coordination service (e.g. etcd)
  join-timeout         = 15 seconds // Might depend on cluster size and network properties
  max-nr-of-seed-nodes = 0          // Any nonpositive value means Int.MaxValue
  nr-of-retries        = 2          // Nr. of tries are nr. of retries + 1
  refresh-interval     = 30 seconds // TTL is refresh-interval * ttl-factor
  retry-delay          = 3 seconds  // Give coordination service (e.g. etcd) some delay before retrying
  ttl-factor           = 2.0        // Must be greater or equal 1 + ((coordination-timeout * (1 + nr-of-retries) + retry-delay * nr-of-retries)/ refresh-interval)!
}